{"version":3,"sources":["SimpleMDEComponent.tsx","index.tsx"],"names":["SimpleMDEComponent","props","value","height","args","editorRef","useRef","editorInstance","initialized","containerRef","useEffect","style","document","createElement","textContent","concat","head","appendChild","Streamlit","setComponentReady","initEditor","current","window","EasyMDE","console","log","editor","element","initialValue","autofocus","spellChecker","toolbar","status","minHeight","maxHeight","toolbarSticky","sideBySideFullscreen","codemirror","setSize","handleSideBySideToggle","setTimeout","container","querySelector","classList","contains","cmElement","getWrapperElement","previewElement","width","sideBySideButton","addEventListener","on","currentValue","setComponentValue","error","timeoutId","setFrameHeight","clearTimeout","removeChild","removeEventListener","toTextArea","e","_jsx","ref","overflow","children","defaultValue","display","padding","border","borderRadius","ConnectedComponent","withStreamlitConnection","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"0MA8PeA,MAtPuDC,IACpE,MAAM,MAAEC,EAAQ,GAAE,OAAEC,EAAS,KAAQF,EAAMG,KACrCC,EAAYC,iBAA4B,MACxCC,EAAiBD,iBAAY,MAC7BE,EAAcF,kBAAgB,GAC9BG,EAAeH,iBAAuB,MAwN5C,OAtNAI,qBAAU,KAER,MAAMC,EAAQC,SAASC,cAAc,SACrCF,EAAMG,YAAW,8zBAAAC,OA6BHZ,EAAS,GAAE,wCAAAY,OACPZ,EAAS,GAAE,wCAAAY,OACXZ,EAAS,GAAE,gSAAAY,OASXZ,EAAS,GAAE,wCAAAY,OACXZ,EAAS,GAAE,wKAAAY,OAMfZ,EAAS,GAAE,ujDA4DzBS,SAASI,KAAKC,YAAYN,GAE1BO,IAAUC,oBAEV,MAAMC,EAAaA,KACjB,GAAIf,EAAUgB,UAAYb,EAAYa,SAAWC,OAAOC,QACtD,IACEC,QAAQC,IAAI,2BACZ,MAAMC,EAAS,IAAIJ,OAAOC,QAAQ,CAChCI,QAAStB,EAAUgB,QACnBO,aAAc1B,EACd2B,WAAW,EACXC,cAAc,EACdC,QAAS,CACP,OAAQ,SAAU,UAAW,IAC7B,QAAS,iBACT,eAAgB,IAAK,OAAQ,IAC7B,OAAQ,QAAS,IAAK,QACtB,UAAW,eAAgB,aAAc,IACzC,SAEFC,OAAQ,CAAC,QAAS,SAElBC,UAAU,GAADlB,OAAKZ,EAAS,GAAE,MACzB+B,UAAU,GAADnB,OAAKZ,EAAS,GAAE,MAEzBgC,eAAe,EAEfC,sBAAsB,IAIxBV,EAAOW,WAAWC,QAAQ,KAAMnC,EAAS,IAGzC,MAAMoC,EAAyBA,KAC7BC,YAAW,KACT,MAAMC,EAAY7B,SAAS8B,cAAc,qBACzC,GAAID,GAAaA,EAAUE,UAAUC,SAAS,SAAU,CAEtD,MAAMC,EAAYnB,EAAOW,WAAWS,oBAC9BC,EAAiBnC,SAAS8B,cAAc,wBAE1CG,GAAaE,IACfF,EAAUlC,MAAMqC,MAAQ,MACvBD,EAA+BpC,MAAMqC,MAAQ,MAElD,IACC,KAICC,EAAmBrC,SAAS8B,cAAc,eAC5CO,GACFA,EAAiBC,iBAAiB,QAASX,GAG7Cb,EAAOW,WAAWc,GAAG,UAAU,KAC7B,MAAMC,EAAe1B,EAAOxB,QAC5BgB,IAAUmC,kBAAkBD,MAG9B7C,EAAec,QAAUK,EACzBlB,EAAYa,SAAU,EACtBG,QAAQC,IAAI,mCACd,CAAE,MAAO6B,GACP9B,QAAQ8B,MAAM,8BAA+BA,EAC/C,MACUhC,OAAOC,SACjBC,QAAQ8B,MAAM,uCAKlBlC,IAGA,MAAMmC,EAAYf,WAAWpB,EAAY,KAKzC,OAFAF,IAAUsC,eAAerD,GAElB,KACLsD,aAAaF,GACb3C,SAASI,KAAK0C,YAAY/C,GAG1B,MAAMsC,EAAmBrC,SAAS8B,cAAc,eAKhD,GAJIO,GACFA,EAAiBU,oBAAoB,SAAS,SAG5CpD,EAAec,QAAS,CAC1B,IACEd,EAAec,QAAQuC,YACzB,CAAE,MAAOC,GACPrC,QAAQ8B,MAAM,6BAA8BO,EAC9C,CACAtD,EAAec,QAAU,KACzBb,EAAYa,SAAU,CACxB,KAED,CAACnB,EAAOC,IAGT2D,cAAA,OACEC,IAAKtD,EACLE,MAAO,CACLR,OAAO,GAADY,OAAKZ,EAAM,MACjB6C,MAAO,OACPgB,SAAU,UACVC,SAEFH,cAAA,YACEC,IAAK1D,EACL6D,aAAchE,EACdS,MAAO,CACLwD,QAAS,QACTnB,MAAO,OACP7C,OAAQ,OACRiE,QAAS,MACTC,OAAQ,iBACRC,aAAc,Y,MChPxB,MAAMC,EAAqBC,YAAwBxE,GAGnDyE,IAASC,OACPZ,cAACa,IAAMC,WAAU,CAAAX,SACfH,cAACS,EAAkB,MAErB3D,SAASiE,eAAe,Q","file":"static/js/main.7119541c.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { ComponentProps, Streamlit } from \"streamlit-component-lib\";\n\ninterface SimpleMDEProps {\n  value: string;\n  height: number;\n}\n\nconst SimpleMDEComponent: React.FC<ComponentProps<SimpleMDEProps>> = (props) => {\n  const { value = \"\", height = 500 } = props.args;\n  const editorRef = useRef<HTMLTextAreaElement>(null);\n  const editorInstance = useRef<any>(null);\n  const initialized = useRef<boolean>(false);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    // Add CSS to fix scrollbars, toolbar, and side-by-side mode\n    const style = document.createElement('style');\n    style.textContent = `\n      /* Container styling */\n      .EasyMDEContainer {\n        display: flex;\n        flex-direction: column;\n        width: 100% !important;\n      }\n      \n      /* Make the toolbar match textarea styling */\n      .EasyMDEContainer .editor-toolbar {\n        position: sticky;\n        top: 0;\n        z-index: 10;\n        background: white;\n        border: 1px solid #ccc;\n        border-bottom: none;\n        border-top-left-radius: 4px;\n        border-top-right-radius: 4px;\n        opacity: 1 !important;\n        padding: 6px;\n      }\n      \n      /* Ensure toolbar is always visible on hover */\n      .EasyMDEContainer:hover .editor-toolbar {\n        opacity: 1 !important;\n      }\n      \n      /* Fix editor styling to match textarea */\n      .EasyMDEContainer .CodeMirror {\n        height: ${height - 40}px !important;\n        min-height: ${height - 40}px !important;\n        max-height: ${height - 40}px !important;\n        overflow-y: auto !important;\n        border: 1px solid #ccc;\n        border-bottom-left-radius: 4px;\n        border-bottom-right-radius: 4px;\n        font-family: inherit;\n      }\n      \n      .EasyMDEContainer .CodeMirror-scroll {\n        min-height: ${height - 40}px !important;\n        max-height: ${height - 40}px !important;\n        overflow-y: auto !important;\n      }\n      \n      /* Preview styling */\n      .EasyMDEContainer .editor-preview-side {\n        height: ${height - 40}px !important;\n        overflow-y: auto !important;\n        top: 40px !important;\n        background: white;\n        border: 1px solid #ccc;\n        border-top: none;\n        border-bottom-right-radius: 4px;\n      }\n      \n      /* Fix side-by-side mode */\n      .EasyMDEContainer.sided {\n        display: flex;\n        flex-direction: column;\n        width: 100% !important;\n      }\n      \n      .EasyMDEContainer.sided .CodeMirror-sided {\n        width: 50% !important;\n        float: left;\n        border-right: none;\n        border-bottom-right-radius: 0;\n      }\n      \n      .EasyMDEContainer.sided .editor-preview-side {\n        width: 50% !important;\n        float: right;\n        border-left: 1px solid #ddd;\n        border-bottom-left-radius: 0;\n      }\n      \n      /* Fix editor-preview-wrapper in side-by-side mode */\n      .EasyMDEContainer.sided .editor-preview-active-side {\n        display: block !important;\n      }\n      \n      /* Fix fullscreen mode */\n      .EasyMDEContainer.fullscreen {\n        z-index: 9999 !important;\n      }\n      \n      .EasyMDEContainer.fullscreen .editor-toolbar {\n        position: fixed;\n        top: 0;\n        left: 0;\n        right: 0;\n        border-radius: 0;\n      }\n      \n      .EasyMDEContainer.fullscreen .CodeMirror {\n        border-radius: 0;\n        border: none;\n        margin-top: 40px;\n      }\n      \n      .EasyMDEContainer.fullscreen.sided .editor-preview-side {\n        border-radius: 0;\n        border: none;\n        border-left: 1px solid #ddd;\n      }\n    `;\n    document.head.appendChild(style);\n\n    Streamlit.setComponentReady();\n    \n    const initEditor = () => {\n      if (editorRef.current && !initialized.current && window.EasyMDE) {\n        try {\n          console.log(\"Initializing EasyMDE...\");\n          const editor = new window.EasyMDE({\n            element: editorRef.current,\n            initialValue: value,\n            autofocus: true,\n            spellChecker: false,\n            toolbar: [\n              \"bold\", \"italic\", \"heading\", \"|\", \n              \"quote\", \"unordered-list\",\n              \"ordered-list\", \"|\", \"code\", \"|\",\n              \"link\", \"image\", \"|\", \"table\", \n              \"preview\", \"side-by-side\", \"fullscreen\", \"|\",\n              \"guide\"\n            ],\n            status: [\"lines\", \"words\"],\n            // Set fixed height for the editor (accounting for toolbar)\n            minHeight: `${height - 40}px`,\n            maxHeight: `${height - 40}px`,\n            // Prevent toolbar from disappearing\n            toolbarSticky: true,\n            // Improve side-by-side mode\n            sideBySideFullscreen: false,\n          });\n\n          // Force CodeMirror to use the correct height and show scrollbars\n          editor.codemirror.setSize(null, height - 40);\n          \n          // Handle side-by-side mode toggle\n          const handleSideBySideToggle = () => {\n            setTimeout(() => {\n              const container = document.querySelector('.EasyMDEContainer');\n              if (container && container.classList.contains('sided')) {\n                // Ensure proper width for side-by-side elements\n                const cmElement = editor.codemirror.getWrapperElement();\n                const previewElement = document.querySelector('.editor-preview-side');\n                \n                if (cmElement && previewElement) {\n                  cmElement.style.width = '50%';\n                  (previewElement as HTMLElement).style.width = '50%';\n                }\n              }\n            }, 10);\n          };\n          \n          // Add event listener for side-by-side button\n          const sideBySideButton = document.querySelector('.fa-columns');\n          if (sideBySideButton) {\n            sideBySideButton.addEventListener('click', handleSideBySideToggle);\n          }\n\n          editor.codemirror.on(\"change\", () => {\n            const currentValue = editor.value();\n            Streamlit.setComponentValue(currentValue);\n          });\n\n          editorInstance.current = editor;\n          initialized.current = true;\n          console.log(\"EasyMDE initialized successfully\");\n        } catch (error) {\n          console.error(\"Error initializing EasyMDE:\", error);\n        }\n      } else if (!window.EasyMDE) {\n        console.error(\"EasyMDE not found in window object\");\n      }\n    };\n\n    // Try to initialize immediately\n    initEditor();\n    \n    // Also try after a short delay to ensure DOM and scripts are loaded\n    const timeoutId = setTimeout(initEditor, 500);\n    \n    // Set the frame height\n    Streamlit.setFrameHeight(height);\n    \n    return () => {\n      clearTimeout(timeoutId);\n      document.head.removeChild(style);\n      \n      // Remove event listener for side-by-side button\n      const sideBySideButton = document.querySelector('.fa-columns');\n      if (sideBySideButton) {\n        sideBySideButton.removeEventListener('click', () => {});\n      }\n      \n      if (editorInstance.current) {\n        try {\n          editorInstance.current.toTextArea();\n        } catch (e) {\n          console.error(\"Error cleaning up EasyMDE:\", e);\n        }\n        editorInstance.current = null;\n        initialized.current = false;\n      }\n    };\n  }, [value, height]);\n\n  return (\n    <div \n      ref={containerRef}\n      style={{ \n        height: `${height}px`, \n        width: \"100%\",\n        overflow: \"hidden\"\n      }}\n    >\n      <textarea \n        ref={editorRef} \n        defaultValue={value} \n        style={{ \n          display: \"block\", \n          width: \"100%\",\n          height: \"100%\",\n          padding: \"8px\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"4px\"\n        }} \n      />\n    </div>\n  );\n};\n\nexport default SimpleMDEComponent;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SimpleMDEComponent from \"./SimpleMDEComponent\";\nimport { withStreamlitConnection } from \"streamlit-component-lib\";\nimport \"easymde/dist/easymde.min.css\";\n\n// Wrap the component with the Streamlit connection\nconst ConnectedComponent = withStreamlitConnection(SimpleMDEComponent);\n\n// Render the component\nReactDOM.render(\n  <React.StrictMode>\n    <ConnectedComponent />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}